/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_OOBDeviceTest_helper_NativeManger */

#ifndef _Included_com_OOBDeviceTest_helper_NativeManger
#define _Included_com_OOBDeviceTest_helper_NativeManger
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_OOBDeviceTest_helper_NativeManger
 * Method:    init
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT void JNICALL Java_com_OOBDeviceTest_helper_NativeManger_init
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getSN
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getSN
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getBoardId
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getBoardId
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getMAC
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getMAC
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getIMEI
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getIMEI
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getUID
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getUID
  (JNIEnv *, jobject);

/*
 * Class:     com_android_settings_DeviceInfoSettings
 * Method:    getUID
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_android_settings_DeviceInfoSettings_getUIDBySetting
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getBT
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getBT
  (JNIEnv *, jobject);

/*
 * Class:     com_DeviceTest_helper_NativeManger
 * Method:    getLcdId
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_OOBDeviceTest_helper_NativeManger_getLcdId
  (JNIEnv *, jobject);

JNIEXPORT jstring JNICALL Java_com_android_settings_DeviceInfoSettings_getBoardIdBySetting
  (JNIEnv *, jobject);

//stresstest
JNIEXPORT jstring JNICALL Java_com_cghs_stresstest_test_BoardidSwitchTest_getBoardId
  (JNIEnv *, jobject);

JNIEXPORT void JNICALL Java_com_cghs_stresstest_test_BoardidSwitchTest_setBoardId
  (JNIEnv *, jobject, jstring);
JNIEXPORT int JNICALL Java_com_cghs_stresstest_test_BoardidSwitchTest_setBoardIdByAreaid
  (JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_com_OOBDeviceTest_helper_NativeManger_gSensorCalbiration(JNIEnv * env,
                jclass c, jintArray array);
JNIEXPORT jintArray JNICALL Java_com_OOBDeviceTest_helper_NativeManger_gSensorLoad(JNIEnv * env,
		jclass c);
JNIEXPORT jint JNICALL Java_com_OOBDeviceTest_helper_NativeManger_gSensorStore(JNIEnv * env,
		jclass c, jint x, jint y, jint z);


void valueToChar(char* src, char* des, int len);
#ifdef __cplusplus
}
#endif
enum type_devices {
	DEVICE_TYPE_NULL = 0x0,

	DEVICE_TYPE_SUM = 0x20,
	DEVICE_TYPE_AREA = 0x24, //
	DEVICE_TYPE_OPERATOR = 0x25,
	DEVICE_TYPE_OPERATOR2 = 0x26,
	DEVICE_TYPE_RESERVE = 0x27,
	DEVICE_TYPE_STATUS = 0x28,

	DEVICE_TYPE_TP = 0x29, //one byte size
	DEVICE_TYPE_LCD,
	DEVICE_TYPE_KEY,
	DEVICE_TYPE_CODEC,
	DEVICE_TYPE_WIFI,
	DEVICE_TYPE_BT,
	DEVICE_TYPE_GPS,
	DEVICE_TYPE_FM,
	DEVICE_TYPE_MODEM,
	DEVICE_TYPE_DDR,
	DEVICE_TYPE_FLASH,
	DEVICE_TYPE_HDMI,
	DEVICE_TYPE_BATTERY,
	DEVICE_TYPE_CHARGE,
	DEVICE_TYPE_BACKLIGHT,
	DEVICE_TYPE_HEADSET,
	DEVICE_TYPE_MICPHONE,
	DEVICE_TYPE_SPEAKER,
	DEVICE_TYPE_VIBRATOR,
	DEVICE_TYPE_TV,
	DEVICE_TYPE_ECHIP, //30
	DEVICE_TYPE_HUB,
	DEVICE_TYPE_TPAD,

	DEVICE_TYPE_PMIC,
	DEVICE_TYPE_REGULATOR,
	DEVICE_TYPE_RTC,
	DEVICE_TYPE_CAMERA_FRONT,
	DEVICE_TYPE_CAMERA_BACK, //35
	DEVICE_TYPE_ANGLE,
	DEVICE_TYPE_ACCEL,
	DEVICE_TYPE_COMPASS,
	DEVICE_TYPE_GYRO,
	DEVICE_TYPE_LIGHT,
	DEVICE_TYPE_PROXIMITY,
	DEVICE_TYPE_TEMPERATURE,
	DEVICE_TYPE_PRESSURE,

	DEVICE_NUM_TYPES,
};

enum area_id{
	AREA_ID_NULL,
	AREA_ID_ALBANIA,
	AREA_ID_ALGERIA,
	AREA_ID_ANGOLA,
	AREA_ID_ARGENTINA,
	AREA_ID_AUSTRALIA,
	AREA_ID_AUSTRIA,
	AREA_ID_AZERBAIJAN,
	AREA_ID_BAHRAIN,
	AREA_ID_BANGLADESH,
	AREA_ID_BARBADOS,
	AREA_ID_BELARUS,
	AREA_ID_BELGIUM,
	AREA_ID_BOLIVIA,
	AREA_ID_BOSNIA_AND_HERZEGOVINA,
	AREA_ID_BOTSWANA,
	AREA_ID_BRAZIL,
	AREA_ID_BULGARIA,
	AREA_ID_CANADA,
	AREA_ID_CHILE,
	AREA_ID_CHINA,
	AREA_ID_COLOMBIA,
	AREA_ID_COTE_D_IVOIRE,
	AREA_ID_CROATIA,
	AREA_ID_CYPRUS,
	AREA_ID_CZECH_REPUBLIC,
	AREA_ID_DENMARK,
	AREA_ID_ECUADOR,
	AREA_ID_EGYPT,
	AREA_ID_ESTONIA,
	AREA_ID_FINLAND,
	AREA_ID_FRANCE_INC_GUADELOUPE,
	AREA_ID_GEORGIA,
	AREA_ID_GERMANY,
	AREA_ID_GREECE,
	AREA_ID_HAITI,
	AREA_ID_HONDURAS,
	AREA_ID_HONG_KONG,
	AREA_ID_HUNGARY,
	AREA_ID_ICELAND,
	AREA_ID_INDIA,
	AREA_ID_INDONESIA,
	AREA_ID_IRELAND,
	AREA_ID_ISRAEL,
	AREA_ID_ITALY,
	AREA_ID_JAMAICA,
	AREA_ID_JAPAN,
	AREA_ID_JORDAN,
	AREA_ID_KAZAKHSTAN,
	AREA_ID_KENYA,
	AREA_ID_KOREA_SOUTH,
	AREA_ID_KUWAIT,
	AREA_ID_LATVIA,
	AREA_ID_LEBANON,
	AREA_ID_LITHUANIA,
	AREA_ID_LUXEMBOURG,
	AREA_ID_MACEDONIA,
	AREA_ID_MALAYSIA,
	AREA_ID_MEXICO,
	AREA_ID_MOLDOVA,
	AREA_ID_MOROCCO,
	AREA_ID_NEPAL,
	AREA_ID_NETHERLAND_ANTILLES,
	AREA_ID_NETHERLANDS_INC_BONAIRE,
	AREA_ID_NEW_ZEALAND,
	AREA_ID_NIGERIA,
	AREA_ID_NORWAY,
	AREA_ID_OMAN,
	AREA_ID_PAKISTAN,
	AREA_ID_PARAGUAY,
	AREA_ID_PERU,
	AREA_ID_PHILIPPINES,
	AREA_ID_POLAND,
	AREA_ID_PORTUGAL,
	AREA_ID_QATAR,
	AREA_ID_ROMANIA,
	AREA_ID_RUSSIA,
	AREA_ID_SAUDI_ARABIA,
	AREA_ID_SERBIA,
	AREA_ID_SINGAPORE,
	AREA_ID_SLOVAKIA,
	AREA_ID_SLOVENIA,
	AREA_ID_SOUTH_AFRICA,
	AREA_ID_SPAIN,
	AREA_ID_SRI_LANKA,
	AREA_ID_SWEDEN,
	AREA_ID_SWITZERLAND,
	AREA_ID_TAIWAN,
	AREA_ID_THAILAND,
	AREA_ID_TRINIDAD_TOBAGO,
	AREA_ID_TUNISIA,
	AREA_ID_TURKEY,
	AREA_ID_TURKMENISTAN,
	AREA_ID_UGANDA,
	AREA_ID_UKRAINE,
	AREA_ID_UNITED_KINGDOM,
	AREA_ID_UNITED_STATES,
	AREA_ID_URUGUAY,
	AREA_ID_UZBEKISTAN,
	AREA_ID_VENEZUELA,
	AREA_ID_VIETNAM,
	AREA_ID_NORDICS,
	AREA_ID_BALTIC,
	AREA_ID_CZECH_SLOVAKIA,
	AREA_ID_CROATIA_SLOVENIA,
	AREA_ID_LA_GROUP,
	AREA_ID_UNITED_ARAB_EMIRATES,
	AREA_ID_EMAT_UK,
	AREA_ID_EMAT_FR,
	AREA_ID_EMAT_PO,
	AREA_ID_NUMS,
};
#endif
